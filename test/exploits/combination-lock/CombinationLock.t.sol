// SPDX-License-Identifier: MIT
pragma solidity ^0.8.25;

import "forge-std/Test.sol";
import {CombinationLock} from "src/exploits/combination-lock/CombinationLock.sol";

contract MightyMaxTest is Test {
    CombinationLock public combinationLock;
    address public challenger = vm.addr(1);

    function setUp() public {
       bytes32 winningCombinationHash = hex"f1a8280096d6878ce0167985a66967120e58d14c2f57c98228cbadb691a1d0a4";

        combinationLock = new CombinationLock(winningCombinationHash);
        vm.deal(challenger, 1 ether);
    }


    function testSubmitCombination() public {
        vm.startPrank(challenger);

        uint8[3] memory combination = [0, 0, 0]; // Enter the correct combination here
        (bool success,) = combinationLock.submitCombination(combination);

        // DO NOT REMOVE
        assertEq(success, true);
    }
}

// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import {SherwoodBank, SherwoodMoneyHandler} from "src/exploits/sherwood-bank/SherwoodBank.sol";

contract SherwoodBankTest is Test {
    SherwoodBank sherwoodBank;
    SherwoodMoneyHandler sherwoodMoneyHandler;
    address[] public userArray;
    address challenger = makeAddr("challenger");

    function setUp() public {
        sherwoodMoneyHandler = new SherwoodMoneyHandler();
        sherwoodBank = new SherwoodBank(address(sherwoodMoneyHandler));

        for (uint256 i = 0; i < 10; i++) {
            userArray.push(vm.addr(i + 1));
            deal(userArray[i], uint256(1 ether));
        }

        sherwoodBank.depositFunds{value: 10 ether}(userArray);

        deal(challenger, uint256(1.25 ether));
    }

    function testPrecheck() public view {
        assertEq(address(sherwoodBank).balance, 10 ether);
        assertEq(address(challenger).balance, 1.25 ether);
    }

    function test_StealMoneyFromTheBank() public {
        vm.startPrank(challenger);

        /**
         * Execute the attack here
         */


        // DO NOT REMOVE
        assertGt(address(challenger).balance, 10 ether);
    }
}


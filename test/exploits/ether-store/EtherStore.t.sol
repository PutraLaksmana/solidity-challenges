// SPDX-License-Identifier: MIT
pragma solidity ^0.8.25;

import "forge-std/Test.sol";
import {EtherStore} from "src/exploits/ether-store/Etherstore.sol";

contract EtherStoreChallenge is Test {
    EtherStore public etherStore;
    address public storeOwner = vm.addr(1);
    address public challenger = vm.addr(2);

    function setUp() public {
        vm.deal(storeOwner, 10 ether);
        vm.deal(challenger, 1 ether);

        etherStore = new EtherStore();

        vm.startPrank(storeOwner);
        etherStore.deposit{value: 5 ether}();
        vm.stopPrank();
    }

    function testPreCheck() public view{
        assertEq(address(etherStore).balance, 5 ether);
    }

    function testAttack() public {
        vm.startPrank(challenger);
        
        /**
         * Execute the attack here
         */

        assertEq(address(etherStore).balance, 0 ether);
    }
}

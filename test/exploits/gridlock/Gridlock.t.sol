// SPDX-License-Identifier: MIT
pragma solidity ^0.8.25;

import "forge-std/Test.sol";
import {Gridlock} from "src/exploits/gridlock/Gridlock.sol";

contract GridlockChallenge is Test {
    Gridlock public gridlock;
    address public challenger = vm.addr(1);

    function setUp() public {
        gridlock = new Gridlock();
        vm.deal(address(gridlock), 50 ether);
        vm.deal(challenger, 1 ether);
    }

    function testPreCheck() public view {
        assertEq(address(gridlock).balance, 50 ether);
        assertEq(address(challenger).balance, 1 ether);
    }

    function testAttack() public {
        vm.startPrank(challenger);

        /**
         * Execute the attack here
         */

        // DO NOT REMOVE
        vm.expectRevert();
        gridlock.withdrawAll();
    }
}

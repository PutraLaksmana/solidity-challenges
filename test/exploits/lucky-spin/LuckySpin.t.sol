// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "forge-std/Test.sol";
import {LuckySpin} from "src/exploits/lucky-spin/LuckySpin.sol";

contract LuckySpinTest is Test {
    LuckySpin public luckySpin;
    address public challenger = vm.addr(1);

    uint256 public contractBalance = 1 ether;
    uint256 public initialChallengerBalance = 1 ether;
    uint256 public totalReward = 0.1 ether;
    uint256 public spins = 10;

    function setUp() public {
        luckySpin = new LuckySpin();
        payable(address(luckySpin)).transfer(contractBalance);

        vm.deal(challenger, initialChallengerBalance);
    }

    function testPreCheck() public view {
        assertEq(address(luckySpin).balance, contractBalance);
        assertEq(address(challenger).balance, initialChallengerBalance);
    }

    function testDrainFunds() public {
        uint256 initialBalance = challenger.balance;

        /* 

        Write the code to explot the vault here

        */

        // DO NOT REMOVE
        uint256 expectedBalance = initialBalance + (spins * totalReward);
        assertEq(challenger.balance, expectedBalance);
        assertEq(address(luckySpin).balance, 0);
    }
}

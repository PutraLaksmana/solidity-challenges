// SPDX-License-Identifier: MIT
pragma solidity ^0.8.25;

contract LuckySpin {
    uint256 public costPerSpin = 0.01 ether; // Cost per spin
    uint256 public reward = 0.1 ether; // Reward for a successful spin

    // Function to spin and try to win the reward
    function spin(uint256 guessedNumber) public payable {
        require(guessedNumber >= 1 && guessedNumber <= 100, "Number must be between 1 and 100");
        require(msg.value == costPerSpin, "Incorrect spin cost");

        // Generate a random number using block number and modulus
        uint256 spinResult = (block.number % 100) + 1;

        // Check if the guessed number matches the spin result
        if (guessedNumber == spinResult) {
            // Transfer the reward to the user
            payable(msg.sender).transfer(reward + costPerSpin);
        }
    }

    receive() external payable {}
}

